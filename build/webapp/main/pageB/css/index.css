#main-pageB {
  background-color: #cf6012;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi9wYWdlQi9jc3MvaW5kZXguY3NzIiwic291cmNlcyI6WyJtYWluL3BhZ2VCL2Nzcy9pbmRleC5zY3NzIiwiLi4vbGliL2Nzcy9zY3NzLXV0aWxzLnNjc3MiLCIuLi9saWIvY3NzL2NvbmZpZy5zY3NzIiwiLi4vbGliL2Nzcy90aGVtZS5zY3NzIiwiLi4vbGliL2Nzcy9taXhpbi5zY3NzIiwiLi4vbGliL2Nzcy9jbGFzc2VzLnNjc3MiLCIuLi9saWIvY3NzL2Z1bmN0aW9uLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgJ3V0Zi04JztcbkBpbXBvcnQgJ3Njc3MtdXRpbHMnO1xuXG4jbWFpbi1wYWdlQiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwNy4xNjIzMTg1OTY3MTc3LDk1LjkxNjgzNjY0NTIwODA0LDE4LjAyMzY5NDgyNzA2NTE2NCk7XG59IiwiQGNoYXJzZXQgXCJ1dGYtOFwiO1xuQGltcG9ydCAnY29uZmlnJztcbkBpbXBvcnQgJ21peGluJztcbkBpbXBvcnQgJ2NsYXNzZXMnO1xuQGltcG9ydCAnZnVuY3Rpb24nOyIsIkBjaGFyc2V0IFwidXRmLThcIjtcbkBpbXBvcnQgJ3RoZW1lJztcblxuLy8g5qC55YWD57SgIDEwMHB4IOWPgueFp1xuJGZvbnQtc2l6ZS1iYXNlOiAxMDBweDsgLy8xcmVtXG4kZm9udC1zaXplOiAkZm9udC1zaXplO1xuJGZvbnQtc2l6ZS10aXRsZTogJGZvbnQtc2l6ZS1sYXJnZTtcbiRmb250LXNpemUtbGluazogJGZvbnQtc2l6ZS1zbWFsbDtcblxuLy8g6buY6K6k5a2X5L2TXG4kZm9udC1mYW1pbHk6ICdQaW5nRmFuZyBTQycsJ0hlbHZldGljYSBOZXVlJywn6buR5L2TJyxTVEhlaXRpU0MtTGlnaHQsSGVsdmV0aWNhLUxpZ2h0LGFyaWFsLHNhbnMtc2VyaWYsJ0Ryb2lkIFNhbnMgRmFsbGJhY2snO1xuXG4kbGluZS1oZWlnaHQ6IDEuNTtcblxuLy8g5Li76aKY6Imy6LCDXG4kdGhlbWUtb3JhbmdlOiAkY29sb3Itb3JhbmdlO1xuXG4vLyDpobXpnaLoibJcbiRjb2xvci1iZzogI2ZhZmFmYTtcbiRjb2xvci1iZy1kaXNhYmxlOiAjZTBlMGUwO1xuJGNvbG9yLWJvcmRlcjogI2NjYztcbiRjb2xvci1ib3JkZXItbGlnaHQ6ICNlZWU7XG4kY29sb3ItYm9yZGVyLWRhcms6ICNhZGFkYWQ7XG4kY29sb3ItYm9yZGVyLWRpc2FibGU6ICNjY2M7XG4kY29sb3ItdGl0bGU6ICMzMzM7XG4kY29sb3ItY29udGVudDogIzY2NjtcbiRjb2xvci1jb250ZW50LWxpZ2h0OiAjYWRhZGFkO1xuJGNvbG9yLWNvbnRlbnQtZGFyazogIzMzMztcbiRjb2xvci1saW5rOiAkdGhlbWUtb3JhbmdlO1xuJGNvbG9yLWxpbmstaG92ZXI6ICR0aGVtZS1vcmFuZ2U7XG4kY29sb3I6ICRjb2xvci1jb250ZW50LWRhcms7XG5cbiRjb2xvci1tYXNrLXdoaXRlOiByZ2JhKDI1NSwyNTUsMjU1LC43KTtcbiRjb2xvci1tYXNrLWJsYWNrOiByZ2JhKDAsMCwwLC4zKTtcbiRjb2xvci1tYXNrLWd1aWRlcjogcmdiYSgwLDAsMCwuNSk7XG5cbi8vIOWOguWVhlxuJHZlbmRvcnM6IC13ZWJraXQtO1xuXG4vLyB6LWluZGV4IOWFtuS7luW6lOWwj+S6jjEwMDBcbiR6LWluZGV4LWxvYWRpbmc6IDIwMDA7XG4kei1pbmRleC1kaWFsb2c6IDExMDA7XG4kei1pbmRleC1tYXNrOiAxMDAwO1xuJHotaW5kZXgtZ3VpZGVyOiAxNTAwO1xuXG4vLyBidXR0b25cbiRjb2xvci1idG4td29yay1iZzogJHRoZW1lLW9yYW5nZTtcbiRjb2xvci1idG4td29yay1jbnQ6ICNmZmY7XG4kY29sb3ItYnRuLWRpc2FibGU6ICRjb2xvci1ib3JkZXItZGlzYWJsZTtcbiRidG4tcmFkaXVzOiAuMDVyZW07XG4kYnRuLWhlaWdodDogLjM4cmVtO1xuJGJ0bi1saW5lLWhlaWdodDogJGJ0bi1oZWlnaHQ7XG5cbiRiYXNlLXVybDogJy9idWlsZC93ZWJhcHAvJztcbiRiYXNlLXNvdXJjZS11cmw6ICRiYXNlLXVybCArICdzaGFyZS9pbWFnZXMvJzsiLCJAY2hhcnNldCBcInV0Zi04XCI7XG4vLyB0aGVtZSDlrZflj7flkozoibLns7vphY3nva5cblxuJGZvbnQtc2l6ZS14eHh4eDogNDlweDtcbiRmb250LXNpemUteHh4eDogMzRweDtcbiRmb250LXNpemUteHh4OiAyNnB4O1xuJGZvbnQtc2l6ZS14eDogMjFweDtcbiRmb250LXNpemUteDogMTlweDsgLy8g5by55bGCdGl0bGXjgIIgIOeJueauiuaWh+Wtl+WKoOeyl1xuJGZvbnQtc2l6ZS1sYXJnZTogMTZweDsgLy8g6aG16Z2idGl0bGUuICAg6aG16Z2idGl0bGUvYnV0dG9u5paH5a2X5Yqg57KXXG4kZm9udC1zaXplOiAxNHB4OyAvLyDpobXpnaLmma7pgJrmloflrZdcbiRmb250LXNpemUtc21hbGw6IDEycHg7Ly8g6L6F5Yqp6K+05piO5paH5a2XXG5cbiRjb2xvci1vcmFuZ2U6ICNmYTg5MTk7XG4kY29sb3Itb3JhbmdlLWxpZ2h0OiAjZmZhMDMzO1xuJGNvbG9yLXdoaXRlOiAjZmZmO1xuJGNvbG9yLWdyYXktc3NzczogI2ZhZmFmYTtcbiRjb2xvci1ncmF5LXNzczogI2YwZjBmMDtcbiRjb2xvci1ncmF5LXNzOiAjZTVlNWU1O1xuJGNvbG9yLWdyYXktczogI2NjYztcbiRjb2xvci1ncmF5LV86ICNhZGFkYWQ7XG4kY29sb3ItZ3JheS1saWdodDogIzg3ODc4NztcbiRjb2xvci1ncmF5OiAjNjY2O1xuJGNvbG9yLWdyYXktZGFyazogIzMzMztcbiRjb2xvci1yZWQ6ICNmYTI0MTk7XG4kY29sb3ItZ3JlZW46ICM1MmI3ODY7XG4kY29sb3ItcmVkLXN0YXJ0OiAjZTM3NDc5O1xuXG5cbiIsIkBjaGFyc2V0IFwidXRmLThcIjtcbkBpbXBvcnQgJ2NvbmZpZyc7XG5cbkBtaXhpbiB2ZW5kb3ItcHJlZml4KCRwcm9wZXJ0eSwgJHZhbHVlKXtcbiAgICBAZWFjaCAkdmVuZG9yIGluICR2ZW5kb3Jze1xuICAgICAgICAjeyR2ZW5kb3J9I3skcHJvcGVydHl9OiAkdmFsdWU7XG4gICAgfVxuICAgICN7JHByb3BlcnR5fTogJHZhbHVlO1xufVxuXG5AbWl4aW4gYm94LXNpemluZygkYm94LXNpemluZzogYm9yZGVyLWJveCkge1xuICAgIEBpbmNsdWRlIHZlbmRvci1wcmVmaXgoYm94LXNpemluZywgJGJveC1zaXppbmcpO1xufVxuXG5AbWl4aW4gZnVsbGJveCgkcG9zaXRpb246IGFic29sdXRlLCAkbWFyZ2luOiBhdXRvKSB7XG4gICAgcG9zaXRpb246ICRwb3NpdGlvbjtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luOiAkbWFyZ2luO1xufVxuXG5AbWl4aW4gcm9vdC1zY3JvbGwoJHNjcm9sbDogZmFsc2UpIHtcbiAgICBodG1sLFxuICAgIGJvZHkge1xuICAgICAgICBAaWYgJHNjcm9sbCB7XG4gICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgfSBAZWxzZSB7XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWl4aW4gZWxsaXBzaXMoJHdpZHRoOiBudWxsKSB7XG4gICAgd2lkdGg6ICR3aWR0aDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG59XG5cbkBtaXhpbiB0ZXh0LWhpZGUoJHdpZHRoOiBudWxsKSB7XG4gICAgd2lkdGg6ICR3aWR0aDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtaW5kZW50OiAxMDAlO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbkBtaXhpbiB0cmFuc2l0aW9uKCR0cmFuc2l0aW9uLi4uKXtcbiAgICBAaW5jbHVkZSB2ZW5kb3ItcHJlZml4KHRyYW5zaXRpb24sICR0cmFuc2l0aW9uKTtcbn1cblxuQG1peGluIGFuaW1hdGlvbigkYW5pbWF0aW9uLi4uKXtcbiAgICBAaW5jbHVkZSB2ZW5kb3ItcHJlZml4KGFuaW1hdGlvbiwgJGFuaW1hdGlvbik7XG59XG5cbkBtaXhpbiB0cmFuc2Zvcm0oJHRyYW5zZm9ybS4uLikge1xuICAgIEBpbmNsdWRlIHZlbmRvci1wcmVmaXgodHJhbnNmb3JtLCAkdHJhbnNmb3JtKTtcbn1cbkBtaXhpbiB0cmFuc2Zvcm0tb3JpZ2luKCR0cmFuc2Zvcm0tb3JpZ2luKSB7XG4gICAgQGluY2x1ZGUgdmVuZG9yLXByZWZpeCh0cmFuc2Zvcm0tb3JpZ2luLCAkdHJhbnNmb3JtLW9yaWdpbik7XG59XG5cbkBtaXhpbiBwZXJzcGVjdGl2ZSgkcGVyc3BlY3RpdmUpIHtcbiAgICBAaW5jbHVkZSB2ZW5kb3ItcHJlZml4KHBlcnNwZWN0aXZlLCAkcGVyc3BlY3RpdmUpO1xufVxuQG1peGluIHBlcnNwZWN0aXZlLW9yaWdpbigkcGVyc3BlY3RpdmUtb3JpZ2luKSB7XG4gICAgQGluY2x1ZGUgdmVuZG9yLXByZWZpeChwZXJzcGVjdGl2ZS1vcmlnaW4sICRwZXJzcGVjdGl2ZS1vcmlnaW4pO1xufVxuXG5AbWl4aW4gZmlsdGVyKCRmaWx0ZXIuLi4pIHtcbiAgICBAaW5jbHVkZSB2ZW5kb3ItcHJlZml4KGZpbHRlciwgJGZpbHRlcik7XG59XG5cbkBtaXhpbiB1c2VyLXNlbGVjdCgkdXNlci1zZWxlY3Q6IG5vbmUpIHtcbiAgICBAaW5jbHVkZSB2ZW5kb3ItcHJlZml4KHVzZXItc2VsZWN0LCAkdXNlci1zZWxlY3QpO1xufVxuXG4vLyDlrprkuYlVQem7mOiupOWkluinglxuQG1peGluIGFwcGVhcmFuY2UoJGFwcGVhcmFuY2U6IG5vbmUpIHtcbiAgICBAaW5jbHVkZSB2ZW5kb3ItcHJlZml4KGFwcGVhcmFuY2UsICRhcHBlYXJhbmNlKTtcbn1cblxuQG1peGluIGJhY2tmYWNlLXZpc2liaWxpdHkoJGJhY2tmYWNlLXZpc2liaWxpdHkpIHtcbiAgICBAaW5jbHVkZSB2ZW5kb3ItcHJlZml4KGJhY2tmYWNlLXZpc2liaWxpdHksICRiYWNrZmFjZS12aXNpYmlsaXR5KTtcbn0iLCJAY2hhcnNldCBcInV0Zi04XCI7XG5AaW1wb3J0ICdjb25maWcnO1xuQGltcG9ydCAnbWl4aW4nO1xuXG4lZnVsbC1ib3h7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbn1cblxuJWZ1bGwtY2VudGVye1xuICAgIEBleHRlbmQgJWZ1bGwtYm94O1xuICAgIG1hcmdpbjogYXV0bztcbn1cblxuJWNvbXBvc2l0b3ItbGF5ZXJ7XG4gICAgQGluY2x1ZGUgdmVuZG9yLXByZWZpeCh0cmFuc2Zvcm0sIHRyYW5zbGF0ZVooMHB4KSk7XG59XG5cbiVyaWdodC1hcnJvdyB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAuMDdyZW07XG4gICAgaGVpZ2h0OiAuMDdyZW07XG4gICAgYm9yZGVyLWNvbG9yOiAjY2NjO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLXdpZHRoOiAuMDFyZW0gLjAxcmVtIDAgMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG59XG5cbiV0ZXh0LWVsbGlwc2lzIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIC13ZWJraXQtdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuJWhpZGUtc2Nyb2xsYmFyIHtcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgICAgIHdpZHRoOiAwO1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgfVxufSIsIkBjaGFyc2V0IFwidXRmLThcIjtcbkBpbXBvcnQgJ2NvbmZpZyc7XG5cbkBmdW5jdGlvbiBsYXllclooJHR5cGUpe1xuICAgIEBpZiAkdHlwZSA9PSBkaWFsb2cge1xuICAgICAgICBAcmV0dXJuICR6LWluZGV4LWRpYWxvZztcblxuICAgIH0gQGVsc2UgaWYgJHR5cGUgPT0gbWFzayB7XG4gICAgICAgIEByZXR1cm4gJHotaW5kZXgtbXNrO1xuXG4gICAgfSBAZWxzZSBpZiAkdHlwZSA9PSBndWlkZXIge1xuICAgICAgICBAcmV0dXJuICR6LWluZGV4LWd1aWRlcjtcblxuICAgIH0gQGVsc2UgaWYgJHR5cGUgPT0gbG9hZGluZyB7XG4gICAgICAgIEByZXR1cm4gJHotaW5kZXgtbG9hZGluZztcbiAgICB9XG59XG5cbkBmdW5jdGlvbiBhYnNvbHV0ZVBhdGgoJHJlbGF0aXZlUGF0aCl7XG4gICAgQHJldHVybiAjeyRiZXNlLXVybH0kcmVsYXRpdmVQYXRoO1xufSJdLCJtYXBwaW5ncyI6IkFBR0EsQUFBQSxXQUFXLENBQUM7RUFDUixnQkFBZ0IsRUFBRSxPQUFHO0NBQ3hCIiwibmFtZXMiOltdfQ== */
