#main-pageA {
  background-color: #08fa44;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi9wYWdlQS9jc3MvaW5kZXguY3NzIiwic291cmNlcyI6WyJtYWluL3BhZ2VBL2Nzcy9pbmRleC5zY3NzIiwiLi4vbGliL2Nzcy9zY3NzLXV0aWxzLnNjc3MiLCIuLi9saWIvY3NzL2NvbmZpZy5zY3NzIiwiLi4vbGliL2Nzcy90aGVtZS5zY3NzIiwiLi4vbGliL2Nzcy9taXhpbi5zY3NzIiwiLi4vbGliL2Nzcy9jbGFzc2VzLnNjc3MiLCIuLi9saWIvY3NzL2Z1bmN0aW9uLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgJ3V0Zi04JztcbkBpbXBvcnQgJ3Njc3MtdXRpbHMnO1xuXG4jbWFpbi1wYWdlQSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDcuNzMzMzczMzE1MjEwODU1LDI1MC4wNzAxNTEwMTA5NjE4LDY4LjM0MjU3NjIyODgwMDU4KTtcbn0iLCJAY2hhcnNldCBcInV0Zi04XCI7XG5AaW1wb3J0ICdjb25maWcnO1xuQGltcG9ydCAnbWl4aW4nO1xuQGltcG9ydCAnY2xhc3Nlcyc7XG5AaW1wb3J0ICdmdW5jdGlvbic7IiwiQGNoYXJzZXQgXCJ1dGYtOFwiO1xuQGltcG9ydCAndGhlbWUnO1xuXG4vLyDmoLnlhYPntKAgMTAwcHgg5Y+C54WnXG4kZm9udC1zaXplLWJhc2U6IDEwMHB4OyAvLzFyZW1cbiRmb250LXNpemU6ICRmb250LXNpemU7XG4kZm9udC1zaXplLXRpdGxlOiAkZm9udC1zaXplLWxhcmdlO1xuJGZvbnQtc2l6ZS1saW5rOiAkZm9udC1zaXplLXNtYWxsO1xuXG4vLyDpu5jorqTlrZfkvZNcbiRmb250LWZhbWlseTogJ1BpbmdGYW5nIFNDJywnSGVsdmV0aWNhIE5ldWUnLCfpu5HkvZMnLFNUSGVpdGlTQy1MaWdodCxIZWx2ZXRpY2EtTGlnaHQsYXJpYWwsc2Fucy1zZXJpZiwnRHJvaWQgU2FucyBGYWxsYmFjayc7XG5cbiRsaW5lLWhlaWdodDogMS41O1xuXG4vLyDkuLvpopjoibLosINcbiR0aGVtZS1vcmFuZ2U6ICRjb2xvci1vcmFuZ2U7XG5cbi8vIOmhtemdouiJslxuJGNvbG9yLWJnOiAjZmFmYWZhO1xuJGNvbG9yLWJnLWRpc2FibGU6ICNlMGUwZTA7XG4kY29sb3ItYm9yZGVyOiAjY2NjO1xuJGNvbG9yLWJvcmRlci1saWdodDogI2VlZTtcbiRjb2xvci1ib3JkZXItZGFyazogI2FkYWRhZDtcbiRjb2xvci1ib3JkZXItZGlzYWJsZTogI2NjYztcbiRjb2xvci10aXRsZTogIzMzMztcbiRjb2xvci1jb250ZW50OiAjNjY2O1xuJGNvbG9yLWNvbnRlbnQtbGlnaHQ6ICNhZGFkYWQ7XG4kY29sb3ItY29udGVudC1kYXJrOiAjMzMzO1xuJGNvbG9yLWxpbms6ICR0aGVtZS1vcmFuZ2U7XG4kY29sb3ItbGluay1ob3ZlcjogJHRoZW1lLW9yYW5nZTtcbiRjb2xvcjogJGNvbG9yLWNvbnRlbnQtZGFyaztcblxuJGNvbG9yLW1hc2std2hpdGU6IHJnYmEoMjU1LDI1NSwyNTUsLjcpO1xuJGNvbG9yLW1hc2stYmxhY2s6IHJnYmEoMCwwLDAsLjMpO1xuJGNvbG9yLW1hc2stZ3VpZGVyOiByZ2JhKDAsMCwwLC41KTtcblxuLy8g5Y6C5ZWGXG4kdmVuZG9yczogLXdlYmtpdC07XG5cbi8vIHotaW5kZXgg5YW25LuW5bqU5bCP5LqOMTAwMFxuJHotaW5kZXgtbG9hZGluZzogMjAwMDtcbiR6LWluZGV4LWRpYWxvZzogMTEwMDtcbiR6LWluZGV4LW1hc2s6IDEwMDA7XG4kei1pbmRleC1ndWlkZXI6IDE1MDA7XG5cbi8vIGJ1dHRvblxuJGNvbG9yLWJ0bi13b3JrLWJnOiAkdGhlbWUtb3JhbmdlO1xuJGNvbG9yLWJ0bi13b3JrLWNudDogI2ZmZjtcbiRjb2xvci1idG4tZGlzYWJsZTogJGNvbG9yLWJvcmRlci1kaXNhYmxlO1xuJGJ0bi1yYWRpdXM6IC4wNXJlbTtcbiRidG4taGVpZ2h0OiAuMzhyZW07XG4kYnRuLWxpbmUtaGVpZ2h0OiAkYnRuLWhlaWdodDtcblxuJGJhc2UtdXJsOiAnL2J1aWxkL3dlYmFwcC8nO1xuJGJhc2Utc291cmNlLXVybDogJGJhc2UtdXJsICsgJ3NoYXJlL2ltYWdlcy8nOyIsIkBjaGFyc2V0IFwidXRmLThcIjtcbi8vIHRoZW1lIOWtl+WPt+WSjOiJsuezu+mFjee9rlxuXG4kZm9udC1zaXplLXh4eHh4OiA0OXB4O1xuJGZvbnQtc2l6ZS14eHh4OiAzNHB4O1xuJGZvbnQtc2l6ZS14eHg6IDI2cHg7XG4kZm9udC1zaXplLXh4OiAyMXB4O1xuJGZvbnQtc2l6ZS14OiAxOXB4OyAvLyDlvLnlsYJ0aXRsZeOAgiAg54m55q6K5paH5a2X5Yqg57KXXG4kZm9udC1zaXplLWxhcmdlOiAxNnB4OyAvLyDpobXpnaJ0aXRsZS4gICDpobXpnaJ0aXRsZS9idXR0b27mloflrZfliqDnspdcbiRmb250LXNpemU6IDE0cHg7IC8vIOmhtemdouaZrumAmuaWh+Wtl1xuJGZvbnQtc2l6ZS1zbWFsbDogMTJweDsvLyDovoXliqnor7TmmI7mloflrZdcblxuJGNvbG9yLW9yYW5nZTogI2ZhODkxOTtcbiRjb2xvci1vcmFuZ2UtbGlnaHQ6ICNmZmEwMzM7XG4kY29sb3Itd2hpdGU6ICNmZmY7XG4kY29sb3ItZ3JheS1zc3NzOiAjZmFmYWZhO1xuJGNvbG9yLWdyYXktc3NzOiAjZjBmMGYwO1xuJGNvbG9yLWdyYXktc3M6ICNlNWU1ZTU7XG4kY29sb3ItZ3JheS1zOiAjY2NjO1xuJGNvbG9yLWdyYXktXzogI2FkYWRhZDtcbiRjb2xvci1ncmF5LWxpZ2h0OiAjODc4Nzg3O1xuJGNvbG9yLWdyYXk6ICM2NjY7XG4kY29sb3ItZ3JheS1kYXJrOiAjMzMzO1xuJGNvbG9yLXJlZDogI2ZhMjQxOTtcbiRjb2xvci1ncmVlbjogIzUyYjc4NjtcbiRjb2xvci1yZWQtc3RhcnQ6ICNlMzc0Nzk7XG5cblxuIiwiQGNoYXJzZXQgXCJ1dGYtOFwiO1xuQGltcG9ydCAnY29uZmlnJztcblxuQG1peGluIHZlbmRvci1wcmVmaXgoJHByb3BlcnR5LCAkdmFsdWUpe1xuICAgIEBlYWNoICR2ZW5kb3IgaW4gJHZlbmRvcnN7XG4gICAgICAgICN7JHZlbmRvcn0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICB9XG4gICAgI3skcHJvcGVydHl9OiAkdmFsdWU7XG59XG5cbkBtaXhpbiBib3gtc2l6aW5nKCRib3gtc2l6aW5nOiBib3JkZXItYm94KSB7XG4gICAgQGluY2x1ZGUgdmVuZG9yLXByZWZpeChib3gtc2l6aW5nLCAkYm94LXNpemluZyk7XG59XG5cbkBtaXhpbiBmdWxsYm94KCRwb3NpdGlvbjogYWJzb2x1dGUsICRtYXJnaW46IGF1dG8pIHtcbiAgICBwb3NpdGlvbjogJHBvc2l0aW9uO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICBtYXJnaW46ICRtYXJnaW47XG59XG5cbkBtaXhpbiByb290LXNjcm9sbCgkc2Nyb2xsOiBmYWxzZSkge1xuICAgIGh0bWwsXG4gICAgYm9keSB7XG4gICAgICAgIEBpZiAkc2Nyb2xsIHtcbiAgICAgICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtaXhpbiBlbGxpcHNpcygkd2lkdGg6IG51bGwpIHtcbiAgICB3aWR0aDogJHdpZHRoO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuQG1peGluIHRleHQtaGlkZSgkd2lkdGg6IG51bGwpIHtcbiAgICB3aWR0aDogJHdpZHRoO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1pbmRlbnQ6IDEwMCU7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuQG1peGluIHRyYW5zaXRpb24oJHRyYW5zaXRpb24uLi4pe1xuICAgIEBpbmNsdWRlIHZlbmRvci1wcmVmaXgodHJhbnNpdGlvbiwgJHRyYW5zaXRpb24pO1xufVxuXG5AbWl4aW4gYW5pbWF0aW9uKCRhbmltYXRpb24uLi4pe1xuICAgIEBpbmNsdWRlIHZlbmRvci1wcmVmaXgoYW5pbWF0aW9uLCAkYW5pbWF0aW9uKTtcbn1cblxuQG1peGluIHRyYW5zZm9ybSgkdHJhbnNmb3JtLi4uKSB7XG4gICAgQGluY2x1ZGUgdmVuZG9yLXByZWZpeCh0cmFuc2Zvcm0sICR0cmFuc2Zvcm0pO1xufVxuQG1peGluIHRyYW5zZm9ybS1vcmlnaW4oJHRyYW5zZm9ybS1vcmlnaW4pIHtcbiAgICBAaW5jbHVkZSB2ZW5kb3ItcHJlZml4KHRyYW5zZm9ybS1vcmlnaW4sICR0cmFuc2Zvcm0tb3JpZ2luKTtcbn1cblxuQG1peGluIHBlcnNwZWN0aXZlKCRwZXJzcGVjdGl2ZSkge1xuICAgIEBpbmNsdWRlIHZlbmRvci1wcmVmaXgocGVyc3BlY3RpdmUsICRwZXJzcGVjdGl2ZSk7XG59XG5AbWl4aW4gcGVyc3BlY3RpdmUtb3JpZ2luKCRwZXJzcGVjdGl2ZS1vcmlnaW4pIHtcbiAgICBAaW5jbHVkZSB2ZW5kb3ItcHJlZml4KHBlcnNwZWN0aXZlLW9yaWdpbiwgJHBlcnNwZWN0aXZlLW9yaWdpbik7XG59XG5cbkBtaXhpbiBmaWx0ZXIoJGZpbHRlci4uLikge1xuICAgIEBpbmNsdWRlIHZlbmRvci1wcmVmaXgoZmlsdGVyLCAkZmlsdGVyKTtcbn1cblxuQG1peGluIHVzZXItc2VsZWN0KCR1c2VyLXNlbGVjdDogbm9uZSkge1xuICAgIEBpbmNsdWRlIHZlbmRvci1wcmVmaXgodXNlci1zZWxlY3QsICR1c2VyLXNlbGVjdCk7XG59XG5cbi8vIOWumuS5iVVB6buY6K6k5aSW6KeCXG5AbWl4aW4gYXBwZWFyYW5jZSgkYXBwZWFyYW5jZTogbm9uZSkge1xuICAgIEBpbmNsdWRlIHZlbmRvci1wcmVmaXgoYXBwZWFyYW5jZSwgJGFwcGVhcmFuY2UpO1xufVxuXG5AbWl4aW4gYmFja2ZhY2UtdmlzaWJpbGl0eSgkYmFja2ZhY2UtdmlzaWJpbGl0eSkge1xuICAgIEBpbmNsdWRlIHZlbmRvci1wcmVmaXgoYmFja2ZhY2UtdmlzaWJpbGl0eSwgJGJhY2tmYWNlLXZpc2liaWxpdHkpO1xufSIsIkBjaGFyc2V0IFwidXRmLThcIjtcbkBpbXBvcnQgJ2NvbmZpZyc7XG5AaW1wb3J0ICdtaXhpbic7XG5cbiVmdWxsLWJveHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xufVxuXG4lZnVsbC1jZW50ZXJ7XG4gICAgQGV4dGVuZCAlZnVsbC1ib3g7XG4gICAgbWFyZ2luOiBhdXRvO1xufVxuXG4lY29tcG9zaXRvci1sYXllcntcbiAgICBAaW5jbHVkZSB2ZW5kb3ItcHJlZml4KHRyYW5zZm9ybSwgdHJhbnNsYXRlWigwcHgpKTtcbn1cblxuJXJpZ2h0LWFycm93IHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IC4wN3JlbTtcbiAgICBoZWlnaHQ6IC4wN3JlbTtcbiAgICBib3JkZXItY29sb3I6ICNjY2M7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItd2lkdGg6IC4wMXJlbSAuMDFyZW0gMCAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbn1cblxuJXRleHQtZWxsaXBzaXMge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgLXdlYmtpdC10ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG4laGlkZS1zY3JvbGxiYXIge1xuICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICB9XG59IiwiQGNoYXJzZXQgXCJ1dGYtOFwiO1xuQGltcG9ydCAnY29uZmlnJztcblxuQGZ1bmN0aW9uIGxheWVyWigkdHlwZSl7XG4gICAgQGlmICR0eXBlID09IGRpYWxvZyB7XG4gICAgICAgIEByZXR1cm4gJHotaW5kZXgtZGlhbG9nO1xuXG4gICAgfSBAZWxzZSBpZiAkdHlwZSA9PSBtYXNrIHtcbiAgICAgICAgQHJldHVybiAkei1pbmRleC1tc2s7XG5cbiAgICB9IEBlbHNlIGlmICR0eXBlID09IGd1aWRlciB7XG4gICAgICAgIEByZXR1cm4gJHotaW5kZXgtZ3VpZGVyO1xuXG4gICAgfSBAZWxzZSBpZiAkdHlwZSA9PSBsb2FkaW5nIHtcbiAgICAgICAgQHJldHVybiAkei1pbmRleC1sb2FkaW5nO1xuICAgIH1cbn1cblxuQGZ1bmN0aW9uIGFic29sdXRlUGF0aCgkcmVsYXRpdmVQYXRoKXtcbiAgICBAcmV0dXJuICN7JGJlc2UtdXJsfSRyZWxhdGl2ZVBhdGg7XG59Il0sIm1hcHBpbmdzIjoiQUFHQSxBQUFBLFdBQVcsQ0FBQztFQUNSLGdCQUFnQixFQUFFLE9BQUc7Q0FDeEIiLCJuYW1lcyI6W119 */
